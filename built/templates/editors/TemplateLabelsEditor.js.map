{"version":3,"sources":["../../../src/templates/editors/TemplateLabelsEditor.jsx"],"names":["labels","TemplateLabelsEditor","props","state","workingTemplate","$","extend","template","updateTemplateAttribute","bind","attribute","self","key","value","updateTemplate","nextProps","setState","width","map","label_name","propTypes","object","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,SAAS,CAAC,UAAD,EAAa,OAAb,EAAsB,OAAtB,EAA+B,MAA/B,EAAuC,KAAvC,EAA8C,KAA9C,EAAqD,MAArD,EAA6D,QAA7D,EAAuE,QAAvE,EAAiF,OAAjF,EAA0F,OAA1F,EAAmG,QAAnG,EAA6G,QAA7G,EAAuH,QAAvH,EAAiI,QAAjI,CAAf;;IAGMC,oB;;;AACF,kCAAYC,KAAZ,EAAkB;AAAA;;AAAA,gJACRA,KADQ;;AAEd,cAAKC,KAAL,GAAa;AACTC,6BAAiBC,EAAEC,MAAF,CAAS,EAAT,EAAa,MAAKJ,KAAL,CAAWK,QAAxB;AADR,SAAb;AAGA,cAAKC,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BC,IAA7B,OAA/B;AALc;AAMjB;;;;gDAEuBC,S,EAAW;AAC/B,gBAAMC,OAAO,IAAb;AACA,mBAAO,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACnBF,qBAAKT,KAAL,CAAWY,cAAX,CAA0BJ,SAA1B,EAAqCE,GAArC,EAA0CC,KAA1C;AACH,aAFD;AAGH;;;kDAEyBE,S,EAAW;AACjC,iBAAKC,QAAL,CAAc,EAACZ,iBAAiBC,EAAEC,MAAF,CAAS,EAAT,EAAaS,UAAUR,QAAvB,CAAlB,EAAd;AACH;;;iCAEQ;AACL,gBAAMA,WAAW,KAAKJ,KAAL,CAAWC,eAA5B;AACA,gBAAMO,OAAO,IAAb;AACA,mBACI;AAAA;AAAA,kBAAO,WAAU,OAAjB;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI,iEADJ;AAEI;AAAA;AAAA,8BAAI,OAAO,EAACM,OAAO,GAAR,EAAX,EAAyB,WAAU,aAAnC;AAAA;AAAA,yBAFJ;AAGI;AAAA;AAAA,8BAAI,OAAO,EAACA,OAAO,GAAR,EAAX,EAAyB,WAAU,aAAnC;AAAA;AAAA,yBAHJ;AAII;AAAA;AAAA,8BAAI,OAAO,EAACA,OAAO,GAAR,EAAX,EAAyB,WAAU,aAAnC;AAAA;AAAA;AAJJ,qBADJ;AAOCjB,2BAAOkB,GAAP,CAAW,UAACC,UAAD,EAAgB;AACxB,+BAAO,iEAAuB,KAAKA,UAA5B,EAAwC,OAAOZ,SAASY,UAAT,CAA/C,EAAqE,QAAQR,KAAKH,uBAAL,CAA6BW,UAA7B,CAA7E,GAAP;AACH,qBAFA;AAPD;AADJ,aADJ;AAeH;;;;;;AAGLlB,qBAAqBmB,SAArB,GAAiC;AAC7Bb,cAAU,oBAAUc,MADS;AAE7BP,oBAAgB,oBAAUQ;AAFG,CAAjC;;kBAKerB,oB","file":"TemplateLabelsEditor.js","sourcesContent":["import React, { Component } from 'react' \nimport PropTypes from 'prop-types';\nimport TemplateLabelSettings from './TemplateLabelSettings';\n\nconst labels = [\"dataname\", \"title\", \"units\", \"mean\", \"min\", \"max\", \"file\", \"crdate\", \"crtime\", \"zname\", \"tname\", \"zvalue\", \"tvalue\", \"zunits\", \"tunits\"]\n\n\nclass TemplateLabelsEditor extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            workingTemplate: $.extend({}, this.props.template)\n        }\n        this.updateTemplateAttribute = this.updateTemplateAttribute.bind(this)\n    }\n    \n    updateTemplateAttribute(attribute) {\n        const self = this;\n        return (key, value) => {\n            self.props.updateTemplate(attribute, key, value);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({workingTemplate: $.extend({}, nextProps.template)});\n    }\n\n    render() {\n        const template = this.state.workingTemplate;\n        const self = this;\n        return (\n            <table className=\"table\">\n                <tbody>\n                    <tr>\n                        <th></th>\n                        <td style={{width: 120}} className=\"text-center\">X</td>\n                        <td style={{width: 120}} className=\"text-center\">Y</td>\n                        <td style={{width: 120}} className=\"text-center\">Priority</td>\n                    </tr>\n                {labels.map((label_name) => {\n                    return <TemplateLabelSettings key={label_name} label={template[label_name]} update={self.updateTemplateAttribute(label_name)} />\n                })}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nTemplateLabelsEditor.propTypes = { \n    template: PropTypes.object,\n    updateTemplate: PropTypes.func\n}\n\nexport default TemplateLabelsEditor;\n"]}