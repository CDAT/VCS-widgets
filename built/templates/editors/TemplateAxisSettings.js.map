{"version":3,"sources":["../../../src/templates/editors/TemplateAxisSettings.jsx"],"names":["TemplateAxisSettings","props","updateAxisValue","bind","key","self","validator","parseFloat","parseInt","e","update","range","target","value","alt","name","axis","member","priority","isLabel","includes","x","axis1","x1","axis2","x2","label","label1","label2","y","y1","y2","propTypes","object","func"],"mappings":"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","file":"TemplateAxisSettings.js","sourcesContent":["import React, { Component } from 'react' \nimport PropTypes from 'prop-types'\n\nclass TemplateAxisSettings extends Component {\n    constructor(props){\n        super(props)\n        this.updateAxisValue = this.updateAxisValue.bind(this)\n    }\n\n    updateAxisValue(key) {\n        const self = this;\n        let validator = parseFloat;\n        if (key === \"priority\") {\n            validator = parseInt;\n        }\n        return (e) => {\n            self.props.update(key, validator(this.range(e.target.value)));\n        };\n    }\n\n    range(alt){\n        if (alt < 0) {\n            alt = 0;\n        }\n        else if (alt > 1) {\n            alt = 1;\n        }\n        return alt;\n    }\n\n    render() {\n\n        const name = this.props.axis.member;\n        const priority = this.props.axis.priority;\n        var isLabel = false;\n\n        if (name.includes('label')) {\n            isLabel = true;\n        }\n\n        if (name.includes('y')) {\n            var axis = this.props.axis.x;\n            var axis1 = this.props.axis.x1;\n            var axis2 = this.props.axis.x2;\n            var label = \"x\";\n            var label1 = \"x1\";\n            var label2 = \"x2\";\n        }\n        else if (name.includes('x')){\n            var axis = this.props.axis.y;\n            var axis1 = this.props.axis.y1;\n            var axis2 = this.props.axis.y2;\n            var label = \"y\";\n            var label1 = \"y1\";\n            var label2 = \"y2\";\n        }\n\n        return (\n            <div>\n                { isLabel ? (\n                        <div>\n                            {name}\n                            <table className=\"table\">\n                                <tbody>\n                                <tr>\n                                    <td>{label}</td>\n                                    <td><input type=\"number\" value={axis} name={name + \"_\" + label}\n                                               onChange={this.updateAxisValue(label)}/></td>\n                                </tr>\n                                <tr>\n                                    <td>Priority</td>\n                                    <td><input type=\"number\" value={priority} name={name + \"_priority\"}\n                                               onChange={this.updateAxisValue(\"priority\")}/></td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    ) : (\n                        <div>\n                            {name}\n                            <table className=\"table\">\n                                <tbody>\n\n                                <tr>\n                                    <td>{label}1</td>\n                                    <td><input type=\"number\" value={axis1} name={name + \"_\" + label1}\n                                               onChange={this.updateAxisValue(label1)}/></td>\n                                </tr>\n                                <tr>\n                                    <td>{label}2</td>\n                                    <td><input type=\"number\" value={axis2} name={name + \"_\" + label2}\n                                               onChange={this.updateAxisValue(label2)}/></td>\n                                </tr>\n                                <tr>\n                                    <td>Priority</td>\n                                    <td><input type=\"number\" value={priority} name={name + \"_priority\"}\n                                               onChange={this.updateAxisValue(\"priority\")}/></td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n            </div>\n        );\n    }\n}\n\nTemplateAxisSettings.propTypes = { \n    axis: PropTypes.object,\n    update: PropTypes.func\n}\n\nexport default TemplateAxisSettings;\n"]}