{"version":3,"sources":["../../../src/templates/editors/TemplateAxisSettings.jsx"],"names":["TemplateAxisSettings","createClass","propTypes","axis","PropTypes","object","update","func","updateAxisValue","key","self","validator","parseFloat","parseInt","e","props","range","target","value","alt","render","name","member","priority","isLabel","includes","x","axis1","x1","axis2","x2","label","label1","label2","y","y1","y2"],"mappings":"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","file":"TemplateAxisSettings.js","sourcesContent":["import React from 'react'\n\nvar TemplateAxisSettings = React.createClass({\n    propTypes: {\n        axis: React.PropTypes.object,\n        update: React.PropTypes.func\n    },\n    updateAxisValue(key) {\n        const self = this;\n        let validator = parseFloat;\n        if (key === \"priority\") {\n            validator = parseInt;\n        }\n        return (e) => {\n            self.props.update(key, validator(this.range(e.target.value)));\n        };\n    },\n    range(alt){\n        if (alt < 0) {\n            alt = 0;\n        }\n        else if (alt > 1) {\n            alt = 1;\n        }\n        return alt;\n    },\n    render() {\n\n        const name = this.props.axis.member;\n        const priority = this.props.axis.priority;\n        var isLabel = false;\n\n        if (name.includes('label')) {\n            isLabel = true;\n        }\n\n        if (name.includes('y')) {\n            var axis = this.props.axis.x;\n            var axis1 = this.props.axis.x1;\n            var axis2 = this.props.axis.x2;\n            var label = \"x\";\n            var label1 = \"x1\";\n            var label2 = \"x2\";\n        }\n        else if (name.includes('x')){\n            var axis = this.props.axis.y;\n            var axis1 = this.props.axis.y1;\n            var axis2 = this.props.axis.y2;\n            var label = \"y\";\n            var label1 = \"y1\";\n            var label2 = \"y2\";\n        }\n\n        return (\n            <div>\n                { isLabel ? (\n                        <div>\n                            {name}\n                            <table className=\"table\">\n                                <tbody>\n                                <tr>\n                                    <td>{label}</td>\n                                    <td><input type=\"number\" value={axis} name={name + \"_\" + label}\n                                               onChange={this.updateAxisValue(label)}/></td>\n                                </tr>\n                                <tr>\n                                    <td>Priority</td>\n                                    <td><input type=\"number\" value={priority} name={name + \"_priority\"}\n                                               onChange={this.updateAxisValue(\"priority\")}/></td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    ) : (\n                        <div>\n                            {name}\n                            <table className=\"table\">\n                                <tbody>\n\n                                <tr>\n                                    <td>{label}1</td>\n                                    <td><input type=\"number\" value={axis1} name={name + \"_\" + label1}\n                                               onChange={this.updateAxisValue(label1)}/></td>\n                                </tr>\n                                <tr>\n                                    <td>{label}2</td>\n                                    <td><input type=\"number\" value={axis2} name={name + \"_\" + label2}\n                                               onChange={this.updateAxisValue(label2)}/></td>\n                                </tr>\n                                <tr>\n                                    <td>Priority</td>\n                                    <td><input type=\"number\" value={priority} name={name + \"_priority\"}\n                                               onChange={this.updateAxisValue(\"priority\")}/></td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n            </div>\n        );\n    },\n})\n\nexport default TemplateAxisSettings;\n"]}