{"version":3,"sources":["../../../src/templates/editors/TemplateLabelSettings.jsx"],"names":["TemplateLabelSettings","createClass","propTypes","label","PropTypes","object","update","func","updateLabelValue","key","self","validator","parseFloat","parseInt","e","props","range","target","value","alt","render","x","y","priority","name","member","styles","padding","width"],"mappings":";;;;;;AAAA;;;;;;AAGA,IAAIA,wBAAwB,gBAAMC,WAAN,CAAkB;AAAA;;AAC1CC,eAAW;AACPC,eAAO,gBAAMC,SAAN,CAAgBC,MADhB;AAEPC,gBAAQ,gBAAMF,SAAN,CAAgBG;AAFjB,KAD+B;AAK1CC,oBAL0C,4BAKzBC,GALyB,EAKpB;AAAA;;AAClB,YAAMC,OAAO,IAAb;AACA,YAAIC,YAAYC,UAAhB;AACA,YAAIH,QAAQ,UAAZ,EAAwB;AACpBE,wBAAYE,QAAZ;AACH;AACD,eAAO,UAACC,CAAD,EAAO;AACVJ,iBAAKK,KAAL,CAAWT,MAAX,CAAkBG,GAAlB,EAAuBE,UAAU,MAAKK,KAAL,CAAWF,EAAEG,MAAF,CAASC,KAApB,CAAV,CAAvB;AACH,SAFD;AAGH,KAdyC;AAe1CF,SAf0C,iBAepCG,GAfoC,EAehC;AACN,YAAGA,MAAM,CAAT,EAAW;AACPA,kBAAM,CAAN;AACH,SAFD,MAGK,IAAIA,MAAM,CAAV,EAAY;AACbA,kBAAM,CAAN;AACH;AACD,eAAOA,GAAP;AACH,KAvByC;AAwB1CC,UAxB0C,oBAwBjC;AACL,YAAMC,IAAI,KAAKN,KAAL,CAAWZ,KAAX,CAAiBkB,CAA3B;AACA,YAAMC,IAAI,KAAKP,KAAL,CAAWZ,KAAX,CAAiBmB,CAA3B;AACA,YAAMC,WAAW,KAAKR,KAAL,CAAWZ,KAAX,CAAiBoB,QAAlC;AACA,YAAMC,OAAO,KAAKT,KAAL,CAAWZ,KAAX,CAAiBsB,MAA9B;AACA,YAAMC,SAAS,EAACC,SAAS,KAAV,EAAf;;AAEA,eACI;AAAA;AAAA;AACI;AAAA;AAAA,kBAAI,OAAOD,MAAX;AAAoBF;AAApB,aADJ;AAEI;AAAA;AAAA,kBAAI,OAAOE,MAAX;AAAmB,yDAAO,OAAO,EAACE,OAAO,GAAR,EAAd,EAA4B,MAAK,QAAjC,EAA0C,MAAK,OAA/C,EAAuD,OAAOP,CAA9D,EAAiE,MAAK,UAAtE,EAAiF,UAAU,KAAKb,gBAAL,CAAsB,GAAtB,CAA3F;AAAnB,aAFJ;AAGI;AAAA;AAAA,kBAAI,OAAOkB,MAAX;AAAmB,yDAAO,OAAO,EAACE,OAAO,GAAR,EAAd,EAA4B,MAAK,QAAjC,EAA0C,MAAK,OAA/C,EAAuD,OAAON,CAA9D,EAAiE,MAAK,UAAtE,EAAiF,UAAU,KAAKd,gBAAL,CAAsB,GAAtB,CAA3F;AAAnB,aAHJ;AAII;AAAA;AAAA,kBAAI,OAAOkB,MAAX;AAAmB,yDAAO,OAAO,EAACE,OAAO,GAAR,EAAd,EAA4B,MAAK,QAAjC,EAA0C,OAAOL,QAAjD,EAA2D,MAAK,iBAAhE,EAAkF,UAAU,KAAKf,gBAAL,CAAsB,UAAtB,CAA5F;AAAnB;AAJJ,SADJ;AAQH;AAvCyC,CAAlB,CAA5B;;kBA0CeR,qB","file":"TemplateLabelSettings.js","sourcesContent":["import React from 'react'\n\n\nvar TemplateLabelSettings = React.createClass({\n    propTypes: {\n        label: React.PropTypes.object,\n        update: React.PropTypes.func\n    },\n    updateLabelValue(key) {\n        const self = this;\n        let validator = parseFloat;\n        if (key === \"priority\") {\n            validator = parseInt;\n        }\n        return (e) => {\n            self.props.update(key, validator(this.range(e.target.value)));\n        };\n    },\n    range(alt){\n        if(alt < 0){\n            alt = 0;\n        }\n        else if (alt > 1){\n            alt = 1;\n        }\n        return alt;\n    },\n    render() {\n        const x = this.props.label.x;\n        const y = this.props.label.y;\n        const priority = this.props.label.priority;\n        const name = this.props.label.member;\n        const styles = {padding: \"5px\"};\n        \n        return (\n            <tr>\n                <th style={styles}>{name}</th>\n                <td style={styles}><input style={{width: 120}} type=\"number\" step=\"0.001\" value={x} name=\"{name}_x\" onChange={this.updateLabelValue(\"x\")}/></td>\n                <td style={styles}><input style={{width: 120}} type=\"number\" step=\"0.001\" value={y} name=\"{name}_y\" onChange={this.updateLabelValue(\"y\")} /></td>\n                <td style={styles}><input style={{width: 120}} type=\"number\" value={priority} name=\"{name}_priority\" onChange={this.updateLabelValue(\"priority\")} /></td>\n            </tr>\n        );\n    },\n})\n\nexport default TemplateLabelSettings;\n"]}