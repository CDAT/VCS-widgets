{"version":3,"sources":["../../src/graphicsmethods/GraphicsMethodEditForm.jsx"],"names":["GraphicsMethodEditForm","props","console","log","updateGraphicsMethodField","bind","updateGraphicsMethod","attr","value","gm","extend","graphicsMethod","fieldDict","new_gm","colormaps","updateField","editor","g_name","propTypes","object","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAGMA,sB;;;AACF,oCAAYC,KAAZ,EAAkB;AAAA;;AAAA,oJACRA,KADQ;;AAEdC,gBAAQC,GAAR,CAAY,OAAZ;AACA,cAAKC,yBAAL,GAAiC,MAAKA,yBAAL,CAA+BC,IAA/B,OAAjC;AACA,cAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BD,IAA1B,OAA5B;AAJc;AAKjB;;;;kDAEyBE,I,EAAMC,K,EAAO;AACnC;AACA,gBAAMC,KAAK,iBAAEC,MAAF,CAAS,EAAT,EAAa,KAAKT,KAAL,CAAWU,cAAxB,CAAX;AACAF,eAAGF,IAAH,IAAWC,KAAX;AACA,iBAAKP,KAAL,CAAWK,oBAAX,CAAgCG,EAAhC;AACH;;;6CAEoBG,S,EAAW;AAC5B;AACA,gBAAMC,SAAS,iBAAEH,MAAF,CAAS,EAAT,EAAa,KAAKT,KAAL,CAAWU,cAAxB,CAAf;AACA,iBAAKV,KAAL,CAAWK,oBAAX,CAAgC,iBAAEI,MAAF,CAASG,MAAT,EAAiBD,SAAjB,CAAhC;AACH;;;iCAEQ;AACL,gBAAMX,QAAQ;AACZa,2BAAW,KAAKb,KAAL,CAAWa,SADV;AAEZH,gCAAgB,KAAKV,KAAL,CAAWU,cAFf;AAGZL,sCAAsB,KAAKA,oBAHf;AAIZS,6BAAa,KAAKX;AAJN,aAAd;AAMA,gBAAIY,SAAS,IAAb;AACA;AACA,oBAAO,KAAKf,KAAL,CAAWU,cAAX,CAA0BM,MAAjC;AACI,qBAAK,KAAL;AACI,2BAAO,uDAAmBhB,KAAnB,CAAP;AACJ,qBAAK,KAAL;AACI,2BAAO,uDAAmBA,KAAnB,CAAP;AACH;AACI,2BAAO,IAAP;AANT;AAQH;;;;;;AAGLD,uBAAuBkB,SAAvB,GAAmC;AAC/BJ,eAAW,oBAAUK,MADU;AAE/BR,oBAAgB,oBAAUQ,MAFK;AAG/Bb,0BAAsB,oBAAUc;AAHD,CAAnC;;kBAMepB,sB","file":"GraphicsMethodEditForm.js","sourcesContent":["import React, { Component } from 'react' \nimport PropTypes from 'prop-types';\nimport $ from 'jquery';\nimport BoxfillEditor from './editors/BoxfillEditor';\nimport IsofillEditor from './editors/IsofillEditor';\n\n\nclass GraphicsMethodEditForm extends Component {\n    constructor(props){\n        super(props)\n        console.log(\"test1\")\n        this.updateGraphicsMethodField = this.updateGraphicsMethodField.bind(this)\n        this.updateGraphicsMethod = this.updateGraphicsMethod.bind(this)\n    }\n    \n    updateGraphicsMethodField(attr, value) {\n        // Used to update a single field\n        const gm = $.extend({}, this.props.graphicsMethod);\n        gm[attr] = value;\n        this.props.updateGraphicsMethod(gm);\n    }\n\n    updateGraphicsMethod(fieldDict) {\n        // Used for updating several fields at once\n        const new_gm = $.extend({}, this.props.graphicsMethod);\n        this.props.updateGraphicsMethod($.extend(new_gm, fieldDict));\n    }\n\n    render() {\n        const props = {\n          colormaps: this.props.colormaps,\n          graphicsMethod: this.props.graphicsMethod,\n          updateGraphicsMethod: this.updateGraphicsMethod,\n          updateField: this.updateGraphicsMethodField\n        };\n        let editor = null;\n        // We'll switch based on GM type here\n        switch(this.props.graphicsMethod.g_name) {\n            case 'Gfb':\n                return <BoxfillEditor {...props} />\n            case 'Gfi':\n                return <IsofillEditor {...props} />\n             default:\n                 return null\n        }\n    }\n}\n\nGraphicsMethodEditForm.propTypes = { \n    colormaps: PropTypes.object,\n    graphicsMethod: PropTypes.object,\n    updateGraphicsMethod: PropTypes.func,\n}\n\nexport default GraphicsMethodEditForm;\n"]}