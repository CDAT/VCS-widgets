{"version":3,"sources":["../../../src/graphicsmethods/fields/Legend.jsx"],"names":["Legend","createClass","propTypes","updateGraphicsMethod","PropTypes","func","labels","object","levels","array","colors","opacities","patterns","fillStyle","string","showFill","bool","className","getInitialState","legend","props","componentWillReceiveProps","nextProps","setState","render","state","event","target","value","handleChange"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAIA,SAAS,gBAAMC,WAAN,CAAkB;AAAA;;AAC3BC,eAAW;AACPC,8BAAsB,gBAAMC,SAAN,CAAgBC,IAD/B;AAEPC,gBAAQ,gBAAMF,SAAN,CAAgBG,MAFjB;AAGPC,gBAAQ,gBAAMJ,SAAN,CAAgBK,KAHjB;AAIPC,gBAAQ,gBAAMN,SAAN,CAAgBK,KAJjB;AAKPE,mBAAW,gBAAMP,SAAN,CAAgBK,KALpB;AAMPG,kBAAU,gBAAMR,SAAN,CAAgBK,KANnB;AAOPI,mBAAW,gBAAMT,SAAN,CAAgBU,MAPpB;AAQPC,kBAAU,gBAAMX,SAAN,CAAgBY,IARnB;AASPC,mBAAW,gBAAMb,SAAN,CAAgBU;AATpB,KADgB;AAY3BI,mBAZ2B,6BAYT;AACd,eAAO;AACHC,oBAAQ,KAAKC,KAAL,CAAWD;AADhB,SAAP;AAGH,KAhB0B;AAiB3BE,6BAjB2B,qCAiBDC,SAjBC,EAiBU;AACjC,aAAKC,QAAL,CAAc;AACVJ,oBAAQG,UAAUH;AADR,SAAd;AAGH,KArB0B;AAsB3BK,UAtB2B,oBAsBlB;AAAA;;AACL,eACI;AAAA;AAAA,cAAK,WAAW,KAAKJ,KAAL,CAAWH,SAA3B;AACI;AAAA;AAAA;AAAA;AAAA,aADJ;AAEQ,qDAAO,MAAK,MAAZ;AACI,sBAAK,QADT;AAEI,uBAAO,KAAKQ,KAAL,CAAWN,MAAX,GAAoB,KAAKM,KAAL,CAAWN,MAA/B,GAAuC,EAFlD;AAGI,0BAAU,kBAACO,KAAD,EAAS;AAAC,0BAAKH,QAAL,CAAc,EAACJ,QAAOO,MAAMC,MAAN,CAAaC,KAArB,EAAd;AAA2C,iBAHnE;AAII,wBAAQ,KAAKR,KAAL,CAAWS,YAJvB,GAFR;AAOQ,6DAAO,OAAM,4EAAb;AAPR,SADJ;AAWH;AAlC0B,CAAlB,CAAb;;kBAqCe7B,M","file":"Legend.js","sourcesContent":["import React from 'react'\nimport Usage from '../../Usage'\n\nvar Legend = React.createClass({\n    propTypes: {\n        updateGraphicsMethod: React.PropTypes.func,\n        labels: React.PropTypes.object,\n        levels: React.PropTypes.array,\n        colors: React.PropTypes.array,\n        opacities: React.PropTypes.array,\n        patterns: React.PropTypes.array,\n        fillStyle: React.PropTypes.string,\n        showFill: React.PropTypes.bool,\n        className: React.PropTypes.string\n    },\n    getInitialState() {\n        return {\n            legend: this.props.legend,\n        }\n    },\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            legend: nextProps.legend\n        })\n    },\n    render() {\n        return (\n            <div className={this.props.className}>\n                <h5>Legend Labels: </h5>\n                    <input type='text'\n                        name='legend'\n                        value={this.state.legend ? this.state.legend: ''}\n                        onChange={(event)=>{this.setState({legend:event.target.value})}}\n                        onBlur={this.props.handleChange}/>\n                    <Usage usage=\"Specify the desired legend labels () or [] or {} or None to let VCS handle\"/>\n            </div>\n        );\n    }\n});\n\nexport default Legend;\n"]}