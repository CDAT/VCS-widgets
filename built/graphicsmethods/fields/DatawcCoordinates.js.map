{"version":3,"sources":["../../../src/graphicsmethods/fields/DatawcCoordinates.jsx"],"names":["validate","value","maximum","match","new_value","Number","parseFloat","Math","abs","DatawcCoordinates","props","handleBlur","bind","e","updateGraphicsMethod","target","name","self","x1","v","y1","x2","y2","propTypes","func","number"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,OAAzB,EAAkC;AAC9B,QAAI,OAAOD,KAAP,KAAkB,QAAtB,EAAgC;AAC5B,YAAGA,MAAME,KAAN,CAAY,2BAAZ,CAAH,EAA6C;AACzC,gBAAIC,YAAYC,OAAOC,UAAP,CAAkBL,KAAlB,CAAhB;AACA,gBAAGM,KAAKC,GAAL,CAASJ,SAAT,IAAsBF,OAAzB,EAAiC;AAC7B,uBAAO,KAAP;AACH,aAFD,MAEO;AACH,uBAAOE,SAAP;AACH;AACJ,SAPD,MAOO;AACH,mBAAO,KAAP;AACH;AACJ;AACJ;;IACKK,iB;;;AACF,+BAAYC,KAAZ,EAAkB;AAAA;;AAAA,0IACRA,KADQ;;AAEd,cAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,OAAlB;AAFc;AAGjB;;;;mCAEUC,C,EAAG;AACV,iBAAKH,KAAL,CAAWI,oBAAX,CAAgCD,EAAEE,MAAF,CAASC,IAAzC,EAA+CV,WAAWO,EAAEE,MAAF,CAASd,KAApB,CAA/C;AACH;;;iCAEO;AACJ,gBAAMgB,OAAO,IAAb;AACA,mBACI;AAAA;AAAA;AACI;AAAA;AAAA,sBAAK,WAAU,KAAf;AACI;AAAA;AAAA,0BAAK,WAAU,UAAf;AACI,+EAAa,WAAU,WAAvB,EAAmC,OAAM,eAAzC,EAAyD,UAAU,IAAnE,EAAyE,UAAU,IAAnF,EAAyF,MAAM,IAA/F,EAAqG,OAAO,KAAKP,KAAL,CAAWQ,EAAvH,EAA2H,cAAc,sBAACC,CAAD,EAAO;AAACF,qCAAKP,KAAL,CAAWI,oBAAX,CAAgC,WAAhC,EAA6CK,CAA7C;AAAgD,6BAAjM;AADJ,qBADJ;AAII;AAAA;AAAA,0BAAK,WAAU,UAAf;AACI,+EAAa,WAAU,WAAvB,EAAmC,OAAM,eAAzC,EAAyD,UAAU,IAAnE,EAAyE,UAAU,IAAnF,EAAyF,MAAM,IAA/F,EAAqG,OAAO,KAAKT,KAAL,CAAWU,EAAvH,EAA2H,cAAc,sBAACD,CAAD,EAAO;AAACF,qCAAKP,KAAL,CAAWI,oBAAX,CAAgC,WAAhC,EAA6CK,CAA7C;AAAgD,6BAAjM;AADJ;AAJJ,iBADJ;AASI;AAAA;AAAA,sBAAK,WAAU,KAAf;AACI;AAAA;AAAA,0BAAK,WAAU,UAAf;AACI,+EAAa,WAAU,WAAvB,EAAmC,OAAM,aAAzC,EAAuD,UAAU,IAAjE,EAAuE,UAAU,IAAjF,EAAuF,MAAM,IAA7F,EAAmG,OAAO,KAAKT,KAAL,CAAWW,EAArH,EAAyH,cAAc,sBAACF,CAAD,EAAO;AAACF,qCAAKP,KAAL,CAAWI,oBAAX,CAAgC,WAAhC,EAA6CK,CAA7C;AAAgD,6BAA/L;AADJ,qBADJ;AAII;AAAA;AAAA,0BAAK,WAAU,UAAf;AACI,+EAAa,WAAU,WAAvB,EAAmC,OAAM,aAAzC,EAAuD,UAAU,IAAjE,EAAuE,UAAU,IAAjF,EAAuF,MAAM,IAA7F,EAAmG,OAAO,KAAKT,KAAL,CAAWY,EAArH,EAAyH,cAAc,sBAACH,CAAD,EAAO;AAACF,qCAAKP,KAAL,CAAWI,oBAAX,CAAgC,WAAhC,EAA6CK,CAA7C;AAAgD,6BAA/L;AADJ;AAJJ;AATJ,aADJ;AAoBH;;;;;;AAGLV,kBAAkBc,SAAlB,GAA8B;AAC1BT,0BAAsB,oBAAUU,IADN;AAE1BN,QAAI,oBAAUO,MAFY;AAG1BJ,QAAI,oBAAUI,MAHY;AAI1BL,QAAI,oBAAUK,MAJY;AAK1BH,QAAI,oBAAUG;AALY,CAA9B;;kBAQehB,iB","file":"DatawcCoordinates.js","sourcesContent":["import React, { Component } from 'react' \nimport PropTypes from 'prop-types';\nimport Usage from '../../Usage';\nimport NumberField from '../../common/NumberField';\n/* global $ */\n\nfunction validate(value, maximum) {\n    if (typeof(value) === 'string') {\n        if(value.match(/^[\\+-]?[0-9]+(\\.[0-9]+)?$/)) {\n            let new_value = Number.parseFloat(value);\n            if(Math.abs(new_value) > maximum){\n                return false;\n            } else {\n                return new_value;\n            }\n        } else {\n            return false;\n        }\n    }\n}\nclass DatawcCoordinates extends Component {\n    constructor(props){\n        super(props)\n        this.handleBlur = this.handleBlur.bind(this)\n    }\n    \n    handleBlur(e) {\n        this.props.updateGraphicsMethod(e.target.name, parseFloat(e.target.value));\n    }\n\n    render(){\n        const self = this;\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <NumberField controlId=\"datawc_x1\" label=\"X Axis Start:\" minValue={null} maxValue={null} step={null} value={this.props.x1} updatedValue={(v) => {self.props.updateGraphicsMethod(\"datawc_x1\", v)}} />\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <NumberField controlId=\"datawc_y1\" label=\"Y Axis Start:\" minValue={null} maxValue={null} step={null} value={this.props.y1} updatedValue={(v) => {self.props.updateGraphicsMethod(\"datawc_y1\", v)}} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <NumberField controlId=\"datawc_x2\" label=\"X Axis End:\" minValue={null} maxValue={null} step={null} value={this.props.x2} updatedValue={(v) => {self.props.updateGraphicsMethod(\"datawc_x2\", v)}} />\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <NumberField controlId=\"datawc_y2\" label=\"Y Axis End:\" minValue={null} maxValue={null} step={null} value={this.props.y2} updatedValue={(v) => {self.props.updateGraphicsMethod(\"datawc_y2\", v)}} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatawcCoordinates.propTypes = { \n    updateGraphicsMethod: PropTypes.func,\n    x1: PropTypes.number,\n    x2: PropTypes.number,\n    y1: PropTypes.number,\n    y2: PropTypes.number,\n}\n\nexport default DatawcCoordinates;\n"]}