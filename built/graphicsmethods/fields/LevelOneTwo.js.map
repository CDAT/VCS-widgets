{"version":3,"sources":["../../../src/graphicsmethods/fields/LevelOneTwo.jsx"],"names":["verify","value","match","Number","parseFloat","LevelOneTwo","self","props","level1","v","updateGraphicsMethod","level2","propTypes","func","number"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAGA;;AAEA,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAI,OAAOA,KAAP,KAAkB,QAAtB,EAAgC;AAC5B,YAAGA,MAAMC,KAAN,CAAY,oCAAZ,CAAH,EAAsD;AAClD,mBAAOC,OAAOC,UAAP,CAAkBH,KAAlB,CAAP;AACH,SAFD,MAEO;AACH,mBAAO,KAAP;AACH;AACJ;AACJ;;IAEKI,W;;;;;;;;;;;iCACO;AACL,gBAAMC,OAAO,IAAb;AACA;;;;;;;;;;;AAWA,mBACI;AAAA;AAAA,kBAAK,IAAG,eAAR;AACI,uEAAa,WAAU,SAAvB,EAAiC,OAAM,gBAAvC,EAAwD,UAAU,IAAlE,EAAwE,UAAU,IAAlF,EAAwF,MAAM,IAA9F,EAAoG,OAAO,KAAKC,KAAL,CAAWC,MAAtH,EAA8H,cAAc,sBAACC,CAAD,EAAO;AAACH,6BAAKC,KAAL,CAAWG,oBAAX,CAAgC,SAAhC,EAA2CD,CAA3C;AAA8C,qBAAlM,GADJ;AAEI,uEAAa,WAAU,SAAvB,EAAiC,OAAM,cAAvC,EAAsD,UAAU,IAAhE,EAAsE,UAAU,IAAhF,EAAsF,MAAM,IAA5F,EAAkG,OAAO,KAAKF,KAAL,CAAWI,MAApH,EAA4H,cAAc,sBAACF,CAAD,EAAO;AAACH,6BAAKC,KAAL,CAAWG,oBAAX,CAAgC,SAAhC,EAA2CD,CAA3C;AAA8C,qBAAhM;AAFJ,aADJ;AAMH;;;;;;AAGLJ,YAAYO,SAAZ,GAAwB;AACpBF,0BAAsB,oBAAUG,IADZ;AAEpBL,YAAQ,oBAAUM,MAFE;AAGpBH,YAAQ,oBAAUG;AAHE,CAAxB;;kBAMeT,W","file":"LevelOneTwo.js","sourcesContent":["import React, { Component } from 'react' \nimport PropTypes from 'prop-types'\nimport NumberField from '../../common/NumberField';\n\n\n/* global $ */\n\nfunction verify(value) {\n    if (typeof(value) === 'string') {\n        if(value.match(/^-?[0-9]+((\\.[0-9]+)?e\\+?[0-9]+)?$/)) {\n            return Number.parseFloat(value);\n        } else {\n            return false;\n        }\n    }\n}\n\nclass LevelOneTwo extends Component {\n    render() {\n        const self = this;\n        /*\n        value: PropTypes.number,\n        minValue: PropTypes.number,\n        maxvalue: PropTypes.number,\n        updatedValue: PropTypes.func,\n        label: PropTypes.string,\n        controlId: PropTypes.string,\n        step: PropTypes.number,\n        autoround: PropTypes.bool,\n        placeholder: PropTypes.string,\n        */\n        return (\n            <div id='level-one-two'>\n                <NumberField controlId=\"level_1\" label=\"Starting Level\" minValue={null} maxValue={null} step={null} value={this.props.level1} updatedValue={(v) => {self.props.updateGraphicsMethod(\"level_1\", v)}} />\n                <NumberField controlId=\"level_2\" label=\"Ending Level\" minValue={null} maxValue={null} step={null} value={this.props.level2} updatedValue={(v) => {self.props.updateGraphicsMethod(\"level_2\", v)}} />\n            </div>\n        );\n    }\n}\n\nLevelOneTwo.propTypes = { \n    updateGraphicsMethod: PropTypes.func,\n    level1: PropTypes.number,\n    level2: PropTypes.number\n}\n\nexport default LevelOneTwo;\n"]}