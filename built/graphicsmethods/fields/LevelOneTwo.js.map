{"version":3,"sources":["../../../src/graphicsmethods/fields/LevelOneTwo.jsx"],"names":["verify","value","match","Number","parseFloat","LevelOneTwo","createClass","propTypes","updateGraphicsMethod","PropTypes","func","level1","number","level2","render","self","props","v"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAGA;;AAEA,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAI,OAAOA,KAAP,KAAkB,QAAtB,EAAgC;AAC5B,YAAGA,MAAMC,KAAN,CAAY,oCAAZ,CAAH,EAAsD;AAClD,mBAAOC,OAAOC,UAAP,CAAkBH,KAAlB,CAAP;AACH,SAFD,MAEO;AACH,mBAAO,KAAP;AACH;AACJ;AACJ;;AAED,IAAII,cAAc,gBAAMC,WAAN,CAAkB;AAAA;;AAChCC,eAAW;AACPC,8BAAsB,gBAAMC,SAAN,CAAgBC,IAD/B;AAEPC,gBAAQ,gBAAMF,SAAN,CAAgBG,MAFjB;AAGPC,gBAAQ,gBAAMJ,SAAN,CAAgBG;AAHjB,KADqB;AAMhCE,UANgC,oBAMvB;AACL,YAAMC,OAAO,IAAb;AACA;;;;;;;;;;;AAWA,eACI;AAAA;AAAA,cAAK,IAAG,eAAR;AACI,mEAAa,WAAU,SAAvB,EAAiC,OAAM,gBAAvC,EAAwD,UAAU,IAAlE,EAAwE,UAAU,IAAlF,EAAwF,MAAM,IAA9F,EAAoG,OAAO,KAAKC,KAAL,CAAWL,MAAtH,EAA8H,cAAc,sBAACM,CAAD,EAAO;AAACF,yBAAKC,KAAL,CAAWR,oBAAX,CAAgC,SAAhC,EAA2CS,CAA3C;AAA8C,iBAAlM,GADJ;AAEI,mEAAa,WAAU,SAAvB,EAAiC,OAAM,cAAvC,EAAsD,UAAU,IAAhE,EAAsE,UAAU,IAAhF,EAAsF,MAAM,IAA5F,EAAkG,OAAO,KAAKD,KAAL,CAAWH,MAApH,EAA4H,cAAc,sBAACI,CAAD,EAAO;AAACF,yBAAKC,KAAL,CAAWR,oBAAX,CAAgC,SAAhC,EAA2CS,CAA3C;AAA8C,iBAAhM;AAFJ,SADJ;AAMH;AAzB+B,CAAlB,CAAlB;;kBA4BeZ,W","file":"LevelOneTwo.js","sourcesContent":["import React from 'react'\nimport NumberField from '../components/NumberField';\n\n\n/* global $ */\n\nfunction verify(value) {\n    if (typeof(value) === 'string') {\n        if(value.match(/^-?[0-9]+((\\.[0-9]+)?e\\+?[0-9]+)?$/)) {\n            return Number.parseFloat(value);\n        } else {\n            return false;\n        }\n    }\n}\n\nvar LevelOneTwo = React.createClass({\n    propTypes: {\n        updateGraphicsMethod: React.PropTypes.func,\n        level1: React.PropTypes.number,\n        level2: React.PropTypes.number\n    },\n    render() {\n        const self = this;\n        /*\n        value: React.PropTypes.number,\n        minValue: React.PropTypes.number,\n        maxvalue: React.PropTypes.number,\n        updatedValue: React.PropTypes.func,\n        label: React.PropTypes.string,\n        controlId: React.PropTypes.string,\n        step: React.PropTypes.number,\n        autoround: React.PropTypes.bool,\n        placeholder: React.PropTypes.string,\n        */\n        return (\n            <div id='level-one-two'>\n                <NumberField controlId=\"level_1\" label=\"Starting Level\" minValue={null} maxValue={null} step={null} value={this.props.level1} updatedValue={(v) => {self.props.updateGraphicsMethod(\"level_1\", v)}} />\n                <NumberField controlId=\"level_2\" label=\"Ending Level\" minValue={null} maxValue={null} step={null} value={this.props.level2} updatedValue={(v) => {self.props.updateGraphicsMethod(\"level_2\", v)}} />\n            </div>\n        );\n    }\n});\n\nexport default LevelOneTwo;\n"]}