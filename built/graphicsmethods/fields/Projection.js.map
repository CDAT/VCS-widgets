{"version":3,"sources":["../../../src/graphicsmethods/fields/Projection.jsx"],"names":["Projection","props","projection","e","updateGraphicsMethod","target","value","propTypes","func","string"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;AAEA;;IAEMA,U;;;;;;;;;;;iCACO;AAAA;;AACL,mBACI;AAAA;AAAA,kBAAW,WAAU,YAArB;AACI;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA,sBAAa,OAAO,KAAKC,KAAL,CAAWC,UAA/B,EAA2C,gBAAe,QAA1D,EAAmE,UAAU,kBAACC,CAAD,EAAO;AAAC,mCAAKF,KAAL,CAAWG,oBAAX,CAAgC,YAAhC,EAA8CD,EAAEE,MAAF,CAASC,KAAvD;AAA+D,yBAApJ;AACI;AAAA;AAAA,0BAAQ,OAAM,SAAd;AAAA;AAAA,qBADJ;AAEI;AAAA;AAAA,0BAAQ,OAAM,SAAd;AAAA;AAAA,qBAFJ;AAGI;AAAA;AAAA,0BAAQ,OAAM,QAAd;AAAA;AAAA,qBAHJ;AAII;AAAA;AAAA,0BAAQ,OAAM,UAAd;AAAA;AAAA,qBAJJ;AAKI;AAAA;AAAA,0BAAQ,OAAM,WAAd;AAAA;AAAA,qBALJ;AAMI;AAAA;AAAA,0BAAQ,OAAM,cAAd;AAAA;AAAA,qBANJ;AAOI;AAAA;AAAA,0BAAQ,OAAM,OAAd;AAAA;AAAA,qBAPJ;AAQI;AAAA;AAAA,0BAAQ,OAAM,WAAd;AAAA;AAAA,qBARJ;AASI;AAAA;AAAA,0BAAQ,OAAM,UAAd;AAAA;AAAA;AATJ;AAFJ,aADJ;AAgBH;;;;;;AAGLN,WAAWO,SAAX,GAAuB;AACnBH,0BAAsB,oBAAUI,IADb;AAEnBN,gBAAY,oBAAUO;AAFH,CAAvB;;kBAKeT,U","file":"Projection.js","sourcesContent":["import React, { Component } from 'react' \nimport PropTypes from 'prop-types'\nimport {FormControl, FormGroup, ControlLabel} from 'react-bootstrap'\n\n// TODO: Add dynamic projections, make configurable.\n\nclass Projection extends Component {\n    render() {\n        return (\n            <FormGroup controlId=\"projection\">\n                <ControlLabel>Projection</ControlLabel>\n                <FormControl value={this.props.projection} componentClass=\"select\" onChange={(e) => {this.props.updateGraphicsMethod(\"projection\", e.target.value);} }>\n                    <option value='default'>Default</option>\n                    <option value='lambert'>Lambert</option>\n                    <option value='linear'>Linear</option>\n                    <option value='mercator'>Mercator</option>\n                    <option value='mollweide'>Mollweide</option>\n                    <option value='orthographic'>Orthographic</option>\n                    <option value='polar'>Polar</option>\n                    <option value='polyconic'>Polyconic</option>\n                    <option value='robinson'>Robinson</option>\n                </FormControl>\n            </FormGroup>\n        );\n    }\n}\n\nProjection.propTypes = { \n    updateGraphicsMethod: PropTypes.func,\n    projection: PropTypes.string\n}\n\nexport default Projection;\n"]}