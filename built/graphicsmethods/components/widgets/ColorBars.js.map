{"version":3,"sources":["../../../../src/graphicsmethods/components/widgets/ColorBars.jsx"],"names":["ColorBars","props","updateRed","bind","updateBlue","updateGreen","updateAlpha","v","colorUpdated","green","value","blue","alpha","red","style","display","flexDirection","justifyContent","e","color","propTypes","array","func"],"mappings":"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","file":"ColorBars.js","sourcesContent":["import React, { Component } from 'react' \nimport PropTypes from 'prop-types'\nimport NumberField from '../../../common/NumberField'\n\n\nclass ColorBars extends Component {\n    constructor(props){\n        super(props)\n        this.updateRed = this.updateRed.bind(this)\n        this.updateBlue = this.updateBlue.bind(this)\n        this.updateGreen = this.updateGreen.bind(this)\n        this.updateAlpha = this.updateAlpha.bind(this)\n    }\n    \n    updateRed(v) {\n        this.props.colorUpdated([v, this.green.props.value, this.blue.props.value, this.alpha.props.value / 255]);\n    }\n\n    updateBlue(v) {\n        this.props.colorUpdated([this.red.props.value, this.green.props.value, v, this.alpha.props.value / 255]);\n    }\n\n    updateGreen(v) {\n        this.props.colorUpdated([this.red.props.value, v, this.blue.props.value, this.alpha.props.value / 255]);\n    }\n\n    updateAlpha(v) {\n        this.props.colorUpdated([this.red.props.value, this.green.props.value, this.blue.props.value, v / 255]);\n    }\n\n    render() {\n        const style = {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-around\"\n        }\n        return (\n            <div style={style}>\n                <NumberField updatedValue={this.updateRed} ref={(e) => { this.red = e; }} value={this.props.color[0]} label=\"Red:\" minValue={0} maxValue={255} controlId=\"cbred\" />\n                <NumberField updatedValue={this.updateGreen} ref={(e) => { this.green = e; }} value={this.props.color[1]} label=\"Green:\" minValue={0} maxValue={255} controlId=\"cbgreen\" />\n                <NumberField updatedValue={this.updateBlue} ref={(e) => { this.blue = e; }} value={this.props.color[2]} label=\"Blue:\" minValue={0} maxValue={255} controlId=\"cbblue\" />\n                <NumberField updatedValue={this.updateAlpha} ref={(e) => { this.alpha = e; }} value={this.props.color[3] * 255} label=\"Alpha:\" minValue={0} maxValue={255} controlId=\"cbalpha\" />\n            </div>\n        );\n    }\n}\n\nColorBars.propTypes = { \n    color: PropTypes.array,\n    colorUpdated: PropTypes.func,\n}\n\nexport default ColorBars;\n"]}