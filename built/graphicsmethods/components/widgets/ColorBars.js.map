{"version":3,"sources":["../../../../src/graphicsmethods/components/widgets/ColorBars.jsx"],"names":["ColorBars","createClass","propTypes","color","PropTypes","array","colorUpdated","func","updateRed","v","props","green","value","blue","alpha","updateBlue","red","updateGreen","updateAlpha","render","style","display","flexDirection","justifyContent","e"],"mappings":"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","file":"ColorBars.js","sourcesContent":["import React from 'react'\nimport NumberField from '../NumberField'\n\n\nvar ColorBars = React.createClass({\n    propTypes: {\n        color: React.PropTypes.array,\n        colorUpdated: React.PropTypes.func,\n    },\n    updateRed(v) {\n        this.props.colorUpdated([v, this.green.props.value, this.blue.props.value, this.alpha.props.value / 255]);\n    },\n    updateBlue(v) {\n        this.props.colorUpdated([this.red.props.value, this.green.props.value, v, this.alpha.props.value / 255]);\n    },\n    updateGreen(v) {\n        this.props.colorUpdated([this.red.props.value, v, this.blue.props.value, this.alpha.props.value / 255]);\n    },\n    updateAlpha(v) {\n        this.props.colorUpdated([this.red.props.value, this.green.props.value, this.blue.props.value, v / 255]);\n    },\n    render() {\n        const style = {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-around\"\n        }\n        return (\n            <div style={style}>\n                <NumberField updatedValue={this.updateRed} ref={(e) => { this.red = e; }} value={this.props.color[0]} label=\"Red:\" minValue={0} maxValue={255} controlId=\"cbred\" />\n                <NumberField updatedValue={this.updateGreen} ref={(e) => { this.green = e; }} value={this.props.color[1]} label=\"Green:\" minValue={0} maxValue={255} controlId=\"cbgreen\" />\n                <NumberField updatedValue={this.updateBlue} ref={(e) => { this.blue = e; }} value={this.props.color[2]} label=\"Blue:\" minValue={0} maxValue={255} controlId=\"cbblue\" />\n                <NumberField updatedValue={this.updateAlpha} ref={(e) => { this.alpha = e; }} value={this.props.color[3] * 255} label=\"Alpha:\" minValue={0} maxValue={255} controlId=\"cbalpha\" />\n            </div>\n        );\n    }\n});\n\nexport default ColorBars;\n"]}