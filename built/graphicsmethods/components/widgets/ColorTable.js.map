{"version":3,"sources":["../../../../src/graphicsmethods/components/widgets/ColorTable.jsx"],"names":["colorBrightness","red","green","blue","compareBrightness","c1","c2","red1","green1","blue1","red2","green2","blue2","Math","abs","ColorTable","createClass","propTypes","colors","PropTypes","array","colorSelected","func","render","self","props","map","c","ind","bgcolor","join","textColor","style","e"],"mappings":";;;;;;AAAA;;;;;;AAGA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,IAArC,EAA2C;AACvC,WAAO,CAAC,MAAMF,GAAN,GAAY,MAAMC,KAAlB,GAA0B,MAAMC,IAAjC,IAAyC,IAAhD;AACH;;AAGD,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,EAA/B,EAAmC;AAC/B,QAAMC,OAAOF,GAAG,CAAH,CAAb;AAAA,QAAoBG,SAASH,GAAG,CAAH,CAA7B;AAAA,QAAoCI,QAAQJ,GAAG,CAAH,CAA5C;AACA,QAAMK,OAAOJ,GAAG,CAAH,CAAb;AAAA,QAAoBK,SAASL,GAAG,CAAH,CAA7B;AAAA,QAAoCM,QAAQN,GAAG,CAAH,CAA5C;AACA,WAAOO,KAAKC,GAAL,CAASd,gBAAgBO,IAAhB,EAAsBC,MAAtB,EAA8BC,KAA9B,IAAuCT,gBAAgBU,IAAhB,EAAsBC,MAAtB,EAA8BC,KAA9B,CAAhD,CAAP;AACH;;AAGD,IAAIG,aAAa,gBAAMC,WAAN,CAAkB;AAAA;;AAC/BC,eAAW;AACPC,gBAAQ,gBAAMC,SAAN,CAAgBC,KADjB;AAEPC,uBAAe,gBAAMF,SAAN,CAAgBG;AAFxB,KADoB;AAK/BC,UAL+B,oBAKtB;AACL,YAAMC,OAAO,IAAb;AACA,eACI;AAAA;AAAA,cAAK,OAAO,EAAC,WAAW,MAAZ,EAAoB,YAAY,MAAhC,EAAZ;AACK,iBAAKC,KAAL,CAAWP,MAAX,CAAkBQ,GAAlB,CAAsB,UAACC,CAAD,EAAIC,GAAJ,EAAY;AAC/B,oBAAMC,UAAU,UAAUF,EAAEG,IAAF,CAAO,IAAP,CAAV,GAAyB,GAAzC;AACA,oBAAIC,YAAY,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,CAAhB,CAAhB;AACA,oBAAI3B,kBAAkB2B,SAAlB,EAA6BJ,CAA7B,KAAmC,GAAvC,EAA4C;AACxCI,gCAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAZ;AACH;;AAEDA,4BAAY,UAAUA,UAAUD,IAAV,CAAe,IAAf,CAAV,GAAiC,GAA7C;AACA,oBAAME,QAAQ;AACV,uCAAmBH,OADT;AAEV,6BAASE,SAFC;AAGV,8BAAU,MAHA;AAIV,6BAAS,MAJC;AAKV,iCAAa,QALH;AAMV,kCAAc;AANJ,iBAAd;AAQA,uBAAQ;AAAA;AAAA,sBAAK,KAAKH,GAAV,EAAe,SAAS,iBAACK,CAAD,EAAO;AAAET,iCAAKC,KAAL,CAAWJ,aAAX,CAAyBO,GAAzB;AAAgC,yBAAjE,EAAmE,OAAOI,KAA1E;AAAkFJ;AAAlF,iBAAR;AACH,aAjBA;AADL,SADJ;AAsBH;AA7B8B,CAAlB,CAAjB;;kBAgCeb,U","file":"ColorTable.js","sourcesContent":["import React from 'react'\n\n\nfunction colorBrightness(red, green, blue) {\n    return (299 * red + 587 * green + 114 * blue) / 1000;\n}\n\n\nfunction compareBrightness(c1, c2) {\n    const red1 = c1[0], green1 = c1[1], blue1 = c1[2];\n    const red2 = c2[0], green2 = c2[1], blue2 = c2[2];\n    return Math.abs(colorBrightness(red1, green1, blue1) - colorBrightness(red2, green2, blue2));\n}\n\n\nvar ColorTable = React.createClass({\n    propTypes: {\n        colors: React.PropTypes.array,\n        colorSelected: React.PropTypes.func\n    },\n    render() {\n        const self = this;\n        return (\n            <div style={{'display': 'flex', 'flexWrap': 'wrap'}}>\n                {this.props.colors.map((c, ind) => {\n                    const bgcolor = \"rgba(\" + c.join(\", \") + \")\";\n                    let textColor = [255, 255, 255, 1];\n                    if (compareBrightness(textColor, c) <= 125) {\n                        textColor = [0, 0, 0, 1];\n                    }\n\n                    textColor = \"rgba(\" + textColor.join(\", \") + \")\";\n                    const style = {\n                        'backgroundColor': bgcolor,\n                        'color': textColor,\n                        'height': '30px',\n                        'width': '30px',\n                        'textAlign': 'center',\n                        'lineHeight': '30px',\n                    }\n                    return (<div key={ind} onClick={(e) => { self.props.colorSelected(ind); }} style={style}>{ind}</div>);\n                })}\n            </div>\n        );\n    }\n});\n\nexport default ColorTable;\n"]}