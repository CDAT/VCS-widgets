{"version":3,"sources":["../../../src/graphicsmethods/components/ColorField.jsx"],"names":["rgbToVCS","red","green","blue","alpha","vcsToRGB","Math","round","colornameToRGBA","name","image","document","createElement","style","color","rgb","window","getComputedStyle","substr","length","split","map","parseInt","getRGBA","vcs_color","colormap","apply","Array","isArray","ColorField","createClass","propTypes","PropTypes","array","label","string","controlId","colorChanged","func","inline","bool","getInitialState","showModal","workingColor","props","colorValue","getDefaultProps","openColorPicker","e","setState","closeColorPicker","updateColor","c","finalizeColor","state","render","self","cmap","display","marginRight"],"mappings":"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","file":"ColorField.js","sourcesContent":["import React from 'react'\nimport {FormGroup, ControlLabel, Modal, Button, ButtonToolbar} from 'react-bootstrap'\nimport ColorProp from '../../validators/ColorProp'\nimport ColorButton from './widgets/ColorButton'\nimport ColorPicker from './widgets/ColorPicker'\n\n\nfunction rgbToVCS(red, green, blue, alpha=1) {\n    return [red / 2.55, green / 2.55, blue / 2.55, alpha * 100];\n}\n\nfunction vcsToRGB(red, green, blue, alpha=100) {\n    return [Math.round(red * 2.55), Math.round(green * 2.55), Math.round(blue * 2.55), alpha / 100];\n}\n\nfunction colornameToRGBA(name) {\n    const image = document.createElement(\"img\");\n    image.style.color = name;\n    let rgb = window.getComputedStyle(image);\n    rgb = rgb.substr(4, rgb.length - 5);\n    rgb = rgb.split(\", \").map(parseInt);\n    const red = rgb[0];\n    const green = rgb[1];\n    const blue = rgb[2];\n    const alpha = 1;\n    return [red, green, blue, alpha];\n}\n\nfunction getRGBA(vcs_color, colormap) {\n    let color = [];\n\n    if (typeof vcs_color === \"string\") {\n        color = colornameToRGBA(vcs_color);\n    } else if (typeof vcs_color === \"number\") {\n        color = vcsToRGB.apply(this, colormap[vcs_color]);\n    } else if (Array.isArray(vcs_color)) {\n        color = vcsToRGB.apply(this, vcs_color);\n    }\n\n    return color;\n}\n\n// Accepts a VCS color, converts to RGBA for internal manipulation, spits back out a VCS color\nvar ColorField = React.createClass({\n    propTypes: {\n        color: ColorProp,\n        colormap: React.PropTypes.array,\n        label: React.PropTypes.string,\n        controlId: React.PropTypes.string,\n        colorChanged: React.PropTypes.func,\n        inline: React.PropTypes.bool\n    },\n    getInitialState() {\n        return {\n            showModal: false,\n            workingColor: getRGBA(this.props.color, this.props.colormap),\n            colorValue: this.props.color,\n        }\n    },\n    getDefaultProps() {\n        return {\n            inline: false\n        }\n    },\n    openColorPicker(e) {\n        this.setState({\"showModal\": true});\n    },\n    closeColorPicker(e) {\n        // Reset the color and hide the modal\n        this.setState({\n            \"workingColor\": getRGBA(this.props.color, this.props.colormap),\n            \"showModal\": false,\n        });\n    },\n    updateColor(c) {\n        let workingColor = c;\n        if (typeof c === \"number\") {\n            workingColor = getRGBA(c, this.props.colormap)\n        }\n        this.setState({workingColor: workingColor, colorValue: c});\n    },\n    finalizeColor() {\n        this.setState({\"showModal\": false});\n        if (this.state.workingColor === this.state.colorValue) {\n            this.props.colorChanged(rgbToVCS.apply(this, this.state.workingColor));\n        } else {\n            // there's a color index in colorValue\n            this.props.colorChanged(this.state.colorValue);\n        }\n    },\n    render() {\n        const self = this;\n        const color = this.state.workingColor;\n        const cmap = this.props.colormap.map((c) => { return vcsToRGB.apply(this, c)} );\n        const style = {\n            display: this.props.inline ? \"inline-block\" : \"block\"\n        }\n        return (\n            <FormGroup style={style} controlId={this.props.controlId}>\n                <ControlLabel style={{marginRight: '1em'}}>{this.props.label}</ControlLabel>\n                <ColorButton color={getRGBA(this.props.color, this.props.colormap)} action={this.openColorPicker} />\n                <Modal show={this.state.showModal} onHide={(e) => {this.setState({\"showModal\": false})}}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Choose Color:</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ColorPicker color={color} colormap={cmap} updateCurrentColor={this.updateColor} />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <ButtonToolbar>\n                            <Button onClick={this.closeColorPicker}>Cancel</Button>\n                            <Button onClick={this.finalizeColor} bsStyle=\"primary\">Select</Button>\n                        </ButtonToolbar>\n                    </Modal.Footer>\n                </Modal>\n            </FormGroup>\n        );\n    }\n});\n\nexport default ColorField;\n"]}