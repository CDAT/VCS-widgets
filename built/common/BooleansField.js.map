{"version":3,"sources":["../../src/common/BooleansField.jsx"],"names":["BooleansField","createClass","propTypes","labels","PropTypes","array","value","oneOfType","object","string","options","updatedValue","func","inline","bool","controlId","multiple","getDefaultProps","currentValue","value_dict","props","map","o","update","e","new_value","target","checked","d","reduce","prev","cur","render","self","ind"],"mappings":"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","file":"BooleansField.js","sourcesContent":["import React from 'react'\nimport {Checkbox, Radio, FormGroup, ControlLabel, HelpBlock} from 'react-bootstrap'\n\n\nvar BooleansField = React.createClass({\n    propTypes: {\n        labels: React.PropTypes.array,\n        value: React.PropTypes.oneOfType([\n                                          React.PropTypes.object,\n                                          React.PropTypes.string\n                                         ]),\n        options: React.PropTypes.array,\n        updatedValue: React.PropTypes.func,\n        inline: React.PropTypes.bool,\n        controlId: React.PropTypes.string,\n        multiple: React.PropTypes.bool,\n    },\n    getDefaultProps() {\n        return {\n            inline: false,\n            multiple: true,\n        }\n    },\n    currentValue() {\n        const value_dict = {};\n        this.props.options.map((o) => {\n            value_dict[o] = false;\n            if (o === this.props.value) {\n                value_dict[o] = true;\n            } else if (this.props.value !== null && this.props.value[o]) {\n                value_dict[o] = true;\n            }\n        });\n        return value_dict;\n    },\n    update(e) {\n        const new_value = e.target.checked;\n        if (this.props.multiple) {\n            const value_dict = this.currentValue();\n            value_dict[e.target.value] = new_value;\n            this.props.updatedValue(value_dict);\n        } else {\n            let d = this.props.options.reduce((prev, cur) => {\n                prev[cur] = cur === e.target.value;\n                return prev;\n            }, {});\n            this.props.updatedValue(d);\n        }\n    },\n    render() {\n        const self = this;\n        const value_dict = this.currentValue();\n        return (\n            <FormGroup controlId=\"{this.props.controlId}\">\n                { this.props.options.map((o, ind) => {\n                    if (self.props.multiple) {\n                        return <Checkbox inline={this.props.inline} key={ind} name={self.props.controlId} value={o} checked={value_dict[o]} onChange={self.update}> {self.props.labels[ind]} </Checkbox>\n                    } else {\n                        return <Radio inline={this.props.inline} key={ind} name={self.props.controlId} value={o} checked={value_dict[o]} onChange={self.update}> {self.props.labels[ind]} </Radio>\n                    }\n                })}\n            </FormGroup>\n        );\n    }\n});\n\nexport default BooleansField;\n"]}