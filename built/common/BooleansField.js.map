{"version":3,"sources":["../../src/common/BooleansField.jsx"],"names":["BooleansField","props","currentValue","bind","update","value_dict","options","map","o","value","e","new_value","target","checked","multiple","updatedValue","d","reduce","prev","cur","self","ind","inline","controlId","labels","propTypes","array","oneOfType","object","string","func","bool","defaultProps"],"mappings":"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","file":"BooleansField.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {Checkbox, Radio, FormGroup, ControlLabel, HelpBlock} from 'react-bootstrap'\n\n\nclass BooleansField extends Component {\n    constructor(props){\n        super(props)\n        this.currentValue = this.currentValue.bind(this)\n        this.update = this.update.bind(this)\n    }\n        \n    currentValue() {\n        const value_dict = {};\n        this.props.options.map((o) => {\n            value_dict[o] = false;\n            if (o === this.props.value) {\n                value_dict[o] = true;\n            } else if (this.props.value !== null && this.props.value[o]) {\n                value_dict[o] = true;\n            }\n        });\n        return value_dict;\n    }\n\n    update(e) {\n        const new_value = e.target.checked;\n        if (this.props.multiple) {\n            const value_dict = this.currentValue();\n            value_dict[e.target.value] = new_value;\n            this.props.updatedValue(value_dict);\n        } else {\n            let d = this.props.options.reduce((prev, cur) => {\n                prev[cur] = cur === e.target.value;\n                return prev;\n            }, {});\n            this.props.updatedValue(d);\n        }\n    }\n\n    render() {\n        const self = this;\n        const value_dict = this.currentValue();\n        return (\n            <FormGroup controlId=\"{this.props.controlId}\">\n                { this.props.options.map((o, ind) => {\n                    if (self.props.multiple) {\n                        return <Checkbox inline={this.props.inline} key={ind} name={self.props.controlId} value={o} checked={value_dict[o]} onChange={self.update}> {self.props.labels[ind]} </Checkbox>\n                    } else {\n                        return <Radio inline={this.props.inline} key={ind} name={self.props.controlId} value={o} checked={value_dict[o]} onChange={self.update}> {self.props.labels[ind]} </Radio>\n                    }\n                })}\n            </FormGroup>\n        );\n    }\n}\n\nBooleansField.propTypes = {\n    labels: PropTypes.array,\n    value: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ]),\n    options: PropTypes.array,\n    updatedValue: PropTypes.func,\n    inline: PropTypes.bool,\n    controlId: PropTypes.string,\n    multiple: PropTypes.bool,\n}\n\nBooleansField.defaultProps = {\n    inline: false,\n    multiple: true,\n}\n\nexport default BooleansField;\n"]}