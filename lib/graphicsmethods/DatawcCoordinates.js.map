{"version":3,"sources":["../../src/graphicsmethods/DatawcCoordinates.jsx"],"names":["validate","value","maximum","match","new_value","Number","parseFloat","Math","abs","absMax","DatawcCoordinates","createClass","propTypes","handleChange","PropTypes","func","x1","number","x2","y1","y2","componentWillReceiveProps","nextProps","setState","handleBlur","event","name","target","props","render","isFloat","state","toExponential"],"mappings":"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","file":"DatawcCoordinates.js","sourcesContent":["import React from 'react'\nimport Usage from '../Usage'\n\nfunction validate(value, maximum) {\n    if (typeof(value) === 'string') {\n        if(value.match(/^[\\+-]?[0-9]+(\\.[0-9]+)?$/)) {\n            let new_value = Number.parseFloat(value);\n            if(Math.abs(new_value) > absMax){\n                return false;\n            } else {\n                return new_value;\n            }\n        } else {\n            return false;\n        }\n    }\n}\nvar DatawcCoordinates = React.createClass({\n    propTypes: {\n        handleChange: React.PropTypes.func,\n        x1: React.PropTypes.number,\n        x2: React.PropTypes.number,\n        y1: React.PropTypes.number,\n        y2: React.PropTypes.number\n    },\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            x1: nextProps.x1,\n            x2: nextProps.x2,\n            y1: nextProps.y1,\n            y2: nextProps.y2\n        })\n    },\n    handleBlur(event){\n        let name = event.target.name;\n        let maximum = name.match(/x/) ?180 : 90;\n        let value = validate(event.target.value, maximum);\n        if(value !== false) {\n            this.props.handleChange(name, value)\n        } else {\n            // set usage, reset state\n            switch(name){\n                case \"datawc_x1\":\n                    this.setState({x1: this.props.x1});\n                    break;\n                case \"datawc_x2\":\n                    this.setState({x2: this.props.x2});\n                    break;\n                case \"datawc_y1\":\n                    this.setState({y1: this.props.y1});\n                    break;\n                case \"datawc_y2\":\n                    this.setState({y2: this.props.y2});\n                    break;\n            }\n        }\n    },\n    render(){\n        return (\n            <div>\n                <h5> datawc_x1: </h5>\n                    <input type=\"text\"\n                        name=\"datawc_x1\"\n                        value={\n                            Number.isFloat(this.state.x1) && this.state.x1 > 1e4\n                            ? this.state.x1.toExponential()\n                            : this.state.x1\n                        }\n                        onChange={(event)=>this.setState({x1: event.target.value})}\n                        onBlur={this.handleBlur}/> <br/>\n                    <Usage usage=\"Longitude value representing where the plot's x axis should start\"/>\n                    <h5>datawc_x2: </h5>\n                    <input type=\"text\"\n                        name=\"datawc_x2\"\n                        value={\n                            Number.isFloat(this.state.x2) && this.state.x2 > 1e4\n                            ? this.state.x2.toExponential()\n                            : this.state.x2\n                        }\n                        onChange={(event)=>this.setState({x2: event.target.value})}\n                        onBlur={this.handleBlur}/> <br/>\n                    <Usage id=\"x2-usage\"\n                        usage=\"Longitude value representing where the plot's x axis should end\"/>\n                    <h5>datawc_y1: </h5>\n                    <input type=\"text\"\n                        name=\"datawc_y1\"\n                        value={\n                            Number.isFloat(this.state.y1) && this.state.y1 > 1e4\n                            ? this.state.y1.toExponential()\n                            : this.state.y1\n                        }\n                        onChange={(event)=>this.setState({y1: event.target.value})}\n                        onBlur={this.handleBlur}/> <br/>\n                    <Usage id=\"y1-usage\"\n                        usage=\"Latitude value representing where the plot's y axis should start\"/>\n                    <h5>datawc_y2: </h5>\n                    <input type=\"text\"\n                        name=\"datawc_y2\"\n                        value={\n                            Number.isFloat(this.state.y2) && this.state.y2 > 1e4\n                            ? this.state.y2.toExponential()\n                            : this.state.y2\n                        }\n                        onChange={(event)=>this.setState({y2: event.target.value})}\n                        onBlur={this.handleBlur}/> <br/>\n                    <Usage id=\"y2-usage\"\n                        usage=\"Latitude value representing where the plot's y axis should end\"/>\n            </div>\n        );\n    }\n});\n\nexport default DatawcCoordinates;\n"]}