{"version":3,"sources":["../../src/graphicsmethods/GraphicsMethodEditForm.jsx"],"names":["new_name","that","graphicsMethods","gm","parent","base_gms","name","state","gmEditName","i","includes","GraphicsMethodEditForm","createClass","propTypes","graphicsMethod","PropTypes","string","graphicsMethodParent","gmProps","object","updateGraphicsMethods","func","updateActiveGM","getInitialState","props","componentWillUpdate","prop","componentDidUpdate","componentWillReceiveProps","nextProps","setState","addLevel","cur_gmProps","Object","assign","concat","removeLevel","event","index","Number","parseInt","target","getAttribute","cur_levels","new_levels","slice","length","handleChange","property_name","type","checked","match","level_index","split","value","console","log","changeState","commitEdits","new_props","gm_name","gmEditNameChange","render","no_gm_selected"],"mappings":"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","file":"GraphicsMethodEditForm.js","sourcesContent":["import React from 'react'\nimport $ from 'jquery'\nimport ColormapField from './ColormapField.jsx'\nimport BoxfillType from './BoxfillType.jsx'\nimport ColorOneTwo from './ColorOneTwo.jsx'\nimport DatawcCoordinates from './DatawcCoordinates.jsx'\nimport Exts from './Exts.jsx'\nimport TicsAndLabels from './TicsAndLabels.jsx'\nimport AxisTransforms from './AxisTransforms.jsx'\nimport Levels from './Levels.jsx'\nimport FillareaFields from './FillareaFields.jsx'\nimport LevelOneTwo from './LevelOneTwo.jsx'\nimport Missing from './Missing.jsx'\nimport Projection from './Projection.jsx'\nimport Legend from './Legend.jsx'\n\nlet new_name = (that, graphicsMethods, gm, parent) => {\n    // replace this with some sort of call that gets the base gm names for the specific gm\n    let base_gms = [\n        'a_boxfill', 'a_lambert_boxfill', 'a_mollweide_boxfill',\n        'a_polar_boxfill', 'a_robinson_boxfill', 'default', 'polar', 'quick', 'robinson'\n    ]\n    let name = that.state.gmEditName ?that.state.gmEditName :gm;\n    let i;\n    // don't squash the base graphics methods\n    if (base_gms.includes(name)) {\n        i=0;\n        do {\n            ++i;\n        } while(graphicsMethods[parent][name+'__edit__'+i])\n        return (name+'__edit__'+i);\n    } else {\n        return name;\n    }\n};\nvar GraphicsMethodEditForm = React.createClass({\n    propTypes: {\n        graphicsMethod: React.PropTypes.string,\n        graphicsMethodParent: React.PropTypes.string,\n        gmProps: React.PropTypes.object,\n        graphicsMethods: React.PropTypes.object,\n        updateGraphicsMethods: React.PropTypes.func,\n        updateActiveGM: React.PropTypes.func\n    },\n    getInitialState() {\n        return {\n            gmEditName: this.props.graphicsMethod\n        }\n    },\n    componentWillUpdate() {\n        $(\"#commit-gm-edits\").prop(\"disabled\", true)\n    },\n    componentDidUpdate() {\n        $(\"#commit-gm-edits\").prop(\"disabled\", false)\n    },\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            gmEditName: nextProps.graphicsMethod\n        })\n\n    },\n    addLevel() {\n        let cur_gmProps = Object.assign({}, this.props.gmProps);\n        cur_gmProps['levels'] = cur_gmProps['levels'].concat(1e+20);\n        this.props.updateActiveGM(cur_gmProps, this.props.graphicsMethodParent, this.props.graphicsMethod);\n    },\n    removeLevel(event) {\n        let index = Number.parseInt(event.target.getAttribute('data-index'));\n        let cur_gmProps = Object.assign({}, this.props.gmProps);\n        let cur_levels = cur_gmProps['levels'];\n        let new_levels = cur_levels.slice(0, index).concat(cur_levels.slice((index + 1), cur_levels.length));\n        cur_gmProps['levels'] = new_levels;\n        this.props.updateActiveGM(cur_gmProps, this.props.graphicsMethodParent, this.props.graphicsMethod);\n    },\n    handleChange: function(event) {\n        let property_name = event.target.name;\n        let cur_gmProps = Object.assign({}, this.props.gmProps);\n        if (event.target.type === 'checkbox') {\n            cur_gmProps[property_name] = event.target.checked;\n        } else if (property_name.match(/levels_[0-9]+/)) {\n            let level_index = Number.parseInt(property_name.split('_')[1]);\n            cur_gmProps['levels'][level_index] = event.target.value;\n            console.log(cur_gmProps['levels'][level_index], typeof(cur_gmProps['levels'][level_index]))\n        } else {\n            cur_gmProps[property_name] = event.target.value;\n        }\n        this.props.updateActiveGM(cur_gmProps, this.props.graphicsMethodParent, this.props.graphicsMethod);\n        console.log(cur_gmProps[property_name], typeof(cur_gmProps[property_name]));\n    },\n    changeState(property_name, value, index=null) {\n        let cur_gmProps = Object.assign({}, this.props.gmProps);\n        if(!index) {\n            cur_gmProps[property_name] = value;\n        } else {\n            console.log(index)\n            cur_gmProps[property_name][index] = value;\n        }\n        this.props.updateActiveGM(cur_gmProps, this.props.graphicsMethodParent, this.props.graphicsMethod);\n        console.log(cur_gmProps[property_name], typeof(cur_gmProps[property_name]));\n    },\n    commitEdits() {\n        let parent = this.props.graphicsMethodParent;\n        let gm = this.props.graphicsMethod;\n        let new_props = this.props.gmProps;\n        let graphicsMethods = this.props.graphicsMethods;\n        let gm_name = new_name(this, graphicsMethods, gm, parent)\n        this.props.updateGraphicsMethods(graphicsMethods, new_props, parent, gm, gm_name);\n        this.setState({\n            gmEditName: ''\n        });\n    },\n    gmEditNameChange(event) {\n        this.setState({\n            gmEditName: event.target.value\n        });\n    },\n    render() {\n        if (!this.props.gmProps.no_gm_selected) {\n            return(\n                <div>\n                    <div className='modal-body'>\n                        <div className=\"container-fluid\">\n                            <div className='col-md-12'>\n                                <div className='row'>\n                                    <h3>{\"Name for new GM\"}</h3>\n                                    <input type='text'\n                                        value={this.state.gmEditName}\n                                        onChange={this.gmEditNameChange}/>\n                                </div>\n                            </div>\n                            <div className='col-md-12'>\n                                <h4>Boxfill Settings</h4>\n                                <div className='col-md-12'>\n                                    <BoxfillType handleChange={this.handleChange}\n                                        type={this.props.gmProps['boxfill_type']}\n                                        headerClass='col-md-4'\n                                        radioClass='col-md-4'/>\n                                </div>\n                                <div className='row'>\n                                    <div className='col-md-12'>\n                                        <Missing handleChange={this.changeState}\n                                            missing={this.props.gmProps['missing']}\n                                            className='col-md-6'/>\n                                        <Exts handleChange={this.handleChange}\n                                            ext1={this.props.gmProps['ext_1']}\n                                            ext2={this.props.gmProps['ext_2']}\n                                            className={\n                                                this.props.gmProps['boxfill_type'] !== 'custom'\n                                                ? 'col-md-3'\n                                                : 'hide'}/>\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='col-md-12'>\n                                        <Legend handleChange={this.handleChange}\n                                            legend={this.props.gmProps['legend']}\n                                            className='col-md-12'/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={\n                                this.props.gmProps['boxfill_type'] !== 'custom'\n                                ? 'col-md-12'\n                                : 'hide'}>\n                                <h4>Linear and Log Settings</h4>\n                                <div className=\"col-md-6\">\n                                    <LevelOneTwo handleChange={this.changeState}\n                                        level1={this.props.gmProps['level_1']}\n                                        level2={this.props.gmProps['level_2']} />\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <ColorOneTwo handleChange={this.changeState}\n                                        color1={this.props.gmProps['color_1']}\n                                        color2={this.props.gmProps['color_2']} />\n                                </div>\n                            </div>\n                            <div className={\n                                this.props.gmProps['boxfill_type'] === 'custom'\n                                ? 'col-md-12'\n                                : 'hide'}>\n                                <h4>Custom Settings</h4>\n                                <div className='col-md-12'>\n                                    <Levels handleChange={this.changeState}\n                                        levels={this.props.gmProps['levels']}\n                                        addLevel={this.addLevel}\n                                        removeLevel={this.removeLevel} />\n                                </div>\n                                <div className='col-md-12'>\n                                    <FillareaFields handleChange={this.handleChange}\n                                        colors={this.props.gmProps['fillareacolors']}\n                                        style={this.props.gmProps['fillareastyle']}\n                                        indices={this.props.gmProps['fillareaindices']}\n                                        opacity={this.props.gmProps['fillareaopacity']} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\"\n                            className=\"btn btn-primary\"\n                            id=\"commit-gm-edits\"\n                            onClick={this.commitEdits}\n                            data-dismiss=\"modal\">\n                            Save changes\n                        </button>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                    <h5> Please select one of the Graphics Methods from the list on the left side bar. </h5>\n                </div>\n            )\n        }\n\n    }\n});\n\nexport default GraphicsMethodEditForm;\n"]}