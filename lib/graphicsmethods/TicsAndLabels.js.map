{"version":3,"sources":["../../src/graphicsmethods/TicsAndLabels.jsx"],"names":["validateTics","value","validateLabels","TicsAndLabels","createClass","propTypes","handleChange","PropTypes","func","xmt1","string","xmt2","ymt1","ymt2","xtl1","xtl2","ytl1","ytl2","handleBlur","event","readSlider","label_name","target","name","slider_value","$","val","render","props","NOP","setState","xtl1Slider","state","Object","keys","map","index"],"mappings":"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","file":"TicsAndLabels.js","sourcesContent":["import React from 'react'\nimport Usage from '../Usage'\n\nfunction validateTics(value) {\n\n}\nfunction validateLabels(value) {\n    // must be a valid JSON with float=>string mappings\n\n}\nvar TicsAndLabels = React.createClass({\n    propTypes: {\n        handleChange: React.PropTypes.func,\n        xmt1: React.PropTypes.string,\n        xmt2: React.PropTypes.string,\n        ymt1: React.PropTypes.string,\n        ymt2: React.PropTypes.string,\n        xtl1: React.PropTypes.string,\n        xtl2: React.PropTypes.string,\n        ytl1: React.PropTypes.string,\n        ytl2: React.PropTypes.string\n    },\n    handleBlur(event) {\n\n    },\n    readSlider(event){\n        let label_name = event.target.name\n        let slider_value =  $('#'+label_name).val()\n    },\n    render(){\n        return (\n            <div>\n                <div id='mtics'>\n                    <h5>xmtics1: </h5>\n                    <input name='xmtics1'\n                        type='text'\n                        defaultValue={this.props.xmt1}\n                        onChange={NOP}\n                        onBlur={this.handleBlur}/>\n                    <h5>xmtics2: </h5>\n                    <input name='xmtics2'\n                        type='text'\n                        defaultValue={this.props.xmt2}\n                        onChange={NOP}\n                        onBlur={this.handleBlur}/>\n                    <h5>ymtics1: </h5>\n                    <input name='ymtics1'\n                        type='text'\n                        defaultValue={this.props.ymt1}\n                        onChange={NOP}\n                        onBlur={this.handleBlur}/>\n                    <h5>ymtics2: </h5>\n                    <input name='ymtics2'\n                        type='text'\n                        defaultValue={this.props.ymt2}\n                        onChange={NOP}\n                        onBlur={this.handleBlur}/>\n                </div>\n                <div id='ticlabels'>\n                    <h5>xticlabels1: </h5>\n                    <input id='xtl1'\n                        type='range'\n                        step=\"0.001\"\n                        min=\"-180\"\n                        max=\"180\"\n                        defaultValue=\"0\"\n                        onChange={(event)=>{this.setState({xtl1Slider: event.target.value})}}/>\n                    <button name='xtl1' onClick={this.readSlider}>Add Label {this.state.xtl1Slider}</button>\n                    <div id='xtl1-labels'>\n                        {\n                            this.props.xtl1 !== null && typeof this.props.xtl1 === 'object'\n                            ? Object.keys(this.props.xtl1).map((value, index)=>{\n\n                            })\n                            : ''\n                        }\n                    </div>\n\n                    <input name='xticlabels1'\n                        type='text'\n                        defaultValue={this.props.xtl1}\n                        onChange={NOP}\n                        onBlur={this.handleBlur}/>\n                    <h5>xticlabels2: </h5>\n                    <input name='xticlabels2'\n                        type='text'\n                        defaultValue={this.props.xtl2}\n                        onChange={NOP}\n                        onBlur={this.handleBlur}/>\n                    <h5>yticlabels1: </h5>\n                    <input name='yticlabels1'\n                        type='text'\n                        defaultValue={this.props.ytl1}\n                        onChange={NOP}\n                        onBlur={this.handleBlur}/>\n                    <h5>yticlabels2: </h5>\n                    <input name='yticlabels2'\n                        type='text'\n                        defaultValue={this.props.ytl2}\n                        onBlur={this.handleBlur}/>\n                </div>\n            </div>\n        )\n    }\n});\n\nexport default TicsAndLabels;\n"]}