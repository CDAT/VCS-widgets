{"version":3,"sources":["../../src/graphicsmethods/Levels.jsx"],"names":["verify","value","match","Number","parseFloat","console","log","focus","node_type","node_name","selector","$","handleChange","event","i","parseInt","target","name","split","cur_value","levels","state","first","slice","concat","new_levels","length","setState","Levels","createClass","propTypes","addLevel","PropTypes","func","removeLevel","array","getInitialState","componentWillReceiveProps","nextProps","handleBlur","property_name","index","props","render","map","isInteger","Math","abs","toExponential","bind"],"mappings":"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","file":"Levels.js","sourcesContent":["/* global $ */\nimport React from 'react'\n\nfunction verify(value) {\n    if (typeof(value) === 'string') {\n        if(value.match(/^[\\+-]?[0-9]+(e\\+?[0-9]+)?$/)) {\n            return Number.parseFloat(value);\n        } else {\n            return false;\n        }\n    } else {\n        console.log( \"levels is not a string\")\n    }\n}\nfunction focus(node_type, node_name) {\n    let selector = node_type+\"[name='\"+node_name+\"']\"\n    $(selector).focus()\n}\nfunction handleChange(event) {\n    let i = Number.parseInt(event.target.name.split('_')[1]);\n    let cur_value = event.target.value;\n    let levels = this.state.levels;\n    let first = levels.slice(0, i).concat(cur_value);\n    let new_levels = first.concat(levels.slice((i + 1), levels.length));\n    this.setState({\n        levels: first.concat(levels.slice((i + 1), levels.length))\n    })\n}\nvar Levels = React.createClass({\n    propTypes: {\n        addLevel: React.PropTypes.func,\n        removeLevel: React.PropTypes.func,\n        handleChange: React.PropTypes.func,\n        levels: React.PropTypes.array\n    },\n    getInitialState() {\n        return {\n            levels: [],\n        }\n    },\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            levels: nextProps.levels\n        })\n    },\n    handleBlur(event) {\n        let property_name = event.target.name.split('_')[0];\n        let index = event.target.name.split('_')[1];\n        let value = verify(event.target.value);\n        if (value === 0 || value) {\n            this.props.handleChange(property_name, value, index)\n        } else {\n            // indicate user entered wrong value\n            console.log(property_name + \" must be an integer or 1e+20\");\n            this.setState({\n                levels: this.props.levels\n            });\n        }\n    },\n    render(){\n        return (\n            <div >\n                <h5>Levels: </h5>\n                {\n                    this.state.levels && this.state.levels.length > 0\n                    ? this.state.levels.map((value, index) => {\n                        return (\n                            <div key={'levels_'+index}>\n                                <input name={'levels_'+index}\n                                    type=\"text\"\n                                    value={\n                                        Number.isInteger(value) && Math.abs(value) > 1e4\n                                        ? value.toExponential()\n                                        : value\n                                    }\n                                    onChange={handleChange.bind(this)}\n                                    onBlur={this.handleBlur}/>\n                                <button onClick={this.props.removeLevel}\n                                    data-index={index}\n                                    className='btn btn-secondary'>\n                                            -\n                                </button><br/>\n                                {\n                                    index === (this.state.levels.length - 1)\n                                    ? <button onClick={this.props.addLevel}\n                                        className='btn btn-secondary'>\n                                        +\n                                      </button>\n                                    : ''\n                                }\n                            </div>\n                        );\n                     })\n                    : <button onClick={this.props.addLevel} className='btn btn-secondary'> + </button>\n\n                }\n            </div>\n        );\n    }\n});\n\nexport default Levels;\n"]}