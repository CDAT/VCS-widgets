{"version":3,"sources":["../../src/graphicsmethods/Legend.jsx"],"names":["Legend","createClass","propTypes","handleChange","PropTypes","func","legend","string","className","getInitialState","props","componentWillReceiveProps","nextProps","setState","render","usage","state","event","target","value"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAIA,SAAS,gBAAMC,WAAN,CAAkB;AAAA;;AAC3BC,eAAW;AACPC,sBAAc,gBAAMC,SAAN,CAAgBC,IADvB;AAEPC,gBAAQ,gBAAMF,SAAN,CAAgBG,MAFjB;AAGPC,mBAAW,gBAAMJ,SAAN,CAAgBG;AAHpB,KADgB;AAM3BE,mBAN2B,6BAMT;AACd,eAAO;AACHH,oBAAQ,KAAKI,KAAL,CAAWJ;AADhB,SAAP;AAGH,KAV0B;AAW3BK,6BAX2B,qCAWDC,SAXC,EAWU;AACjC,aAAKC,QAAL,CAAc;AACVP,oBAAQM,UAAUN;AADR,SAAd;AAGH,KAf0B;AAgB3BQ,UAhB2B,oBAgBlB;AAAA;;AACL,YAAIC,QAAQ,4EAAZ;AACA,eACI;AAAA;AAAA,cAAK,WAAW,KAAKL,KAAL,CAAWF,SAA3B;AACI;AAAA;AAAA;AAAA;AAAA,aADJ;AAEQ,qDAAO,MAAK,MAAZ;AACI,sBAAK,QADT;AAEI,uBAAO,KAAKQ,KAAL,CAAWV,MAAX,GAAoB,KAAKU,KAAL,CAAWV,MAA/B,GAAuC,EAFlD;AAGI,0BAAU,kBAACW,KAAD,EAAS;AAAC,0BAAKJ,QAAL,CAAc,EAACP,QAAOW,MAAMC,MAAN,CAAaC,KAArB,EAAd;AAA2C,iBAHnE;AAII,wBAAQ,KAAKT,KAAL,CAAWP,YAJvB,GAFR;AAOQ,6DAAO,OAAOY,KAAd;AAPR,SADJ;AAWH;AA7B0B,CAAlB,CAAb;;kBAgCef,M","file":"Legend.js","sourcesContent":["import React from 'react'\nimport Usage from '../Usage'\n\nvar Legend = React.createClass({\n    propTypes: {\n        handleChange: React.PropTypes.func,\n        legend: React.PropTypes.string,\n        className: React.PropTypes.string\n    },\n    getInitialState() {\n        return {\n            legend: this.props.legend,\n        }\n    },\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            legend: nextProps.legend\n        })\n    },\n    render() {\n        let usage = \"Specify the desired legend labels () or [] or {} or None to let VCS handle\"\n        return (\n            <div className={this.props.className}>\n                <h5>Legend Labels: </h5>\n                    <input type='text'\n                        name='legend'\n                        value={this.state.legend ? this.state.legend: ''}\n                        onChange={(event)=>{this.setState({legend:event.target.value})}}\n                        onBlur={this.props.handleChange}/>\n                    <Usage usage={usage}/>\n            </div>\n        );\n    }\n});\n\nexport default Legend;\n"]}